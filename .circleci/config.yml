version: 2.1

workflows:
  version: 2
  build_and_test:
    jobs:
      - build: # Defines a job named 'build'
          filters:
            branches:
              only:
                - main # Execute this job only when code is pushed to the 'main' branch.
      - deploy: # Defines a job named 'deploy'
          filters:
            branches:
              only:
                - main # Execute this job only when code is pushed to the 'main' branch.
          requires:
            - build # Ensures the 'deploy' job runs only after the 'build' job succeeds

jobs:
  build:
    working_directory: ~/College_Management_System
    docker:
      - image: cimg/ruby:3.3.1-node
    steps:
      - checkout
      - run:
          name: Install Google Chrome
          command: |
            sudo apt-get update
            sudo apt-get install -y wget apt-transport-https fonts-liberation libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcups2 libgtk-3-0 libnspr4 libnss3 libu2f-udev libvulkan1 libxcomposite1 libxdamage1 xdg-utils
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb
            sudo apt-get install -f
            google-chrome --version
      - run:
          name: Install Xvfb
          command: sudo apt install xvfb
      - run:
          name: Start Xvfb
          command: Xvfb :99 -ac &
          background: true
      - run:
          name: Install dependencies
          command: |
            bundle install
            yarn install
      - run:
          name: Setup Chromium and ChromeDriver
          command: |
            sudo apt-get update
            sudo apt-get install -y chromium-browser chromium-chromedriver
            chromium-browser --version
            chromedriver --version
      - run:
          name: Run tests
          command: |
            export DISPLAY=:99
            bundle exec rspec

  deploy:
    docker:
      - image: cimg/ruby:3.3.1-node
    steps:
      - run:
          name: deploy-application
          command: |
            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "
            sudo rm -rf College_Management_System/;
            sudo git clone https://github.com/YagoTaira/College_Management_System.git;
            cd College_Management_System;
            sudo dos2unix deploy.sh;
            source deploy.sh;
            "
